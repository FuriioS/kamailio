From 86fce4b7b5e8bb56c65d628409ee50ecfb2756c4 Mon Sep 17 00:00:00 2001
From: Daniel-Constantin Mierla <miconda@gmail.com>
Date: Fri, 17 May 2013 10:12:00 +0200
Subject: [PATCH 4/4] debugger: documented new parameters related to per
 module log level

---
 modules/debugger/README                 |   60 +++++++++++++++++++++++++++----
 modules/debugger/doc/debugger_admin.xml |   58 ++++++++++++++++++++++++++++++
 2 files changed, 112 insertions(+), 6 deletions(-)

diff --git a/modules/debugger/README b/modules/debugger/README
index 6ad2e09..ff1b32b 100644
--- a/modules/debugger/README
+++ b/modules/debugger/README
@@ -32,6 +32,9 @@ Daniel-Constantin Mierla
               3.5. log_prefix (str)
               3.6. step_usleep (int)
               3.7. step_loops (int)
+              3.8. mod_hash_size (int)
+              3.9. mod_level_mode (int)
+              3.10. mod_level (str)
 
         4. Functions
 
@@ -54,7 +57,10 @@ Daniel-Constantin Mierla
    1.5. Set log_prefix parameter
    1.6. Set step_usleep parameter
    1.7. Set step_loops parameter
-   1.8. dbg_breakpoint usage
+   1.8. Set mod_hash_size parameter
+   1.9. Set mod_level_mode parameter
+   1.10. Set mod_level parameter
+   1.11. dbg_breakpoint usage
 
 Chapter 1. Admin Guide
 
@@ -75,6 +81,9 @@ Chapter 1. Admin Guide
         3.5. log_prefix (str)
         3.6. step_usleep (int)
         3.7. step_loops (int)
+        3.8. mod_hash_size (int)
+        3.9. mod_level_mode (int)
+        3.10. mod_level (str)
 
    4. Functions
 
@@ -136,6 +145,9 @@ Chapter 1. Admin Guide
    3.5. log_prefix (str)
    3.6. step_usleep (int)
    3.7. step_loops (int)
+   3.8. mod_hash_size (int)
+   3.9. mod_level_mode (int)
+   3.10. mod_level (str)
 
 3.1. cfgtrace (int)
 
@@ -223,11 +235,47 @@ modparam("debugger", "step_usleep", 500000)
 modparam("debugger", "step_loops", 100)
 ...
 
+3.8. mod_hash_size (int)
+
+   Used to compute power of two as size of internal hash table to store
+   levels per module (e.g., if its set to 4, internal hash table has 16
+   slots).
+
+   Default value is "0" - feature disabled.
+
+   Example 1.8. Set mod_hash_size parameter
+...
+modparam("debugger", "mod_hash_size", 5)
+...
+
+3.9. mod_level_mode (int)
+
+   Enable or disable per module log level (0 - disabled, 1 - enabled).
+
+   Default value is "0".
+
+   Example 1.9. Set mod_level_mode parameter
+...
+modparam("debugger", "mod_level_mode", 1)
+...
+
+3.10. mod_level (str)
+
+   Specify module log level - the value must be in the format:
+   modulename=level. The parameter can be set many times. For core log
+   level, use module name 'core'.
+
+   Example 1.10. Set mod_level parameter
+...
+modparam("debugger", "mod_level", "core=3")
+modparam("debugger", "mod_level", "tm=3")
+...
+
 4. Functions
 
    4.1. dbg_breakpoint(mode)
 
-4.1.  dbg_breakpoint(mode)
+4.1. dbg_breakpoint(mode)
 
    Anchor a breakpoint at the current line of the config (the one on which
    this function is called). The 'mode' specifies whether the breakpoint
@@ -236,7 +284,7 @@ modparam("debugger", "step_loops", 100)
    Note that this version of the module does not export this anchors to
    RPC for interactive debugging (temporarily disabled).
 
-   Example 1.8. dbg_breakpoint usage
+   Example 1.11. dbg_breakpoint usage
 ...
 if($si=="10.0.0.10")
         dbg_breakpoint("1");
@@ -248,7 +296,7 @@ if($si=="10.0.0.10")
    5.2. dbg.trace
    5.3. dbg.bp
 
-5.1.  dbg.ls
+5.1. dbg.ls
 
    List Kamailio processes with info related to interactive debugging.
 
@@ -262,7 +310,7 @@ if($si=="10.0.0.10")
                 dbg.ls
                 dbg.ls 1234
 
-5.2.  dbg.trace
+5.2. dbg.trace
 
    Control config script running trace.
 
@@ -279,7 +327,7 @@ if($si=="10.0.0.10")
                 dbg.trace off
                 dbg.trace on 1234
 
-5.3.  dbg.bp
+5.3. dbg.bp
 
    Control breakpoints and config execution.
 
diff --git a/modules/debugger/doc/debugger_admin.xml b/modules/debugger/doc/debugger_admin.xml
index b265724..7df8af1 100644
--- a/modules/debugger/doc/debugger_admin.xml
+++ b/modules/debugger/doc/debugger_admin.xml
@@ -223,6 +223,64 @@ modparam("debugger", "step_loops", 100)
 	    </example>
 	</section>
 
+	<section>
+	    <title><varname>mod_hash_size</varname> (int)</title>
+	    <para>
+		Used to compute power of two as size of internal hash table to store levels
+		per module (e.g., if its set to 4, internal hash table has 16 slots).
+	    </para>
+	    <para>
+		<emphasis>
+		    Default value is <quote>0</quote> - feature disabled.
+		</emphasis>
+	    </para>
+	    <example>
+		<title>Set <varname>mod_hash_size</varname> parameter</title>
+		<programlisting format="linespecific">
+...
+modparam("debugger", "mod_hash_size", 5)
+...
+</programlisting>
+	    </example>
+	</section>
+
+	<section>
+	    <title><varname>mod_level_mode</varname> (int)</title>
+	    <para>
+        Enable or disable per module log level (0 - disabled, 1 - enabled).
+	    </para>
+	    <para>
+		<emphasis>
+		    Default value is <quote>0</quote>.
+		</emphasis>
+	    </para>
+	    <example>
+		<title>Set <varname>mod_level_mode</varname> parameter</title>
+		<programlisting format="linespecific">
+...
+modparam("debugger", "mod_level_mode", 1)
+...
+</programlisting>
+	    </example>
+	</section>
+
+	<section>
+	    <title><varname>mod_level</varname> (str)</title>
+	    <para>
+		Specify module log level - the value must be in the format:
+		modulename=level. The parameter can be set many times. For core
+		log level, use module name 'core'.
+	    </para>
+	    <example>
+		<title>Set <varname>mod_level</varname> parameter</title>
+		<programlisting format="linespecific">
+...
+modparam("debugger", "mod_level", "core=3")
+modparam("debugger", "mod_level", "tm=3")
+...
+</programlisting>
+	    </example>
+	</section>
 	</section>
 	
     <section>
-- 
1.7.10.4

